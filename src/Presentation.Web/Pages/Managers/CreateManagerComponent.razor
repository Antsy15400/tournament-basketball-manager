@using System.ComponentModel.DataAnnotations

<EditForm Model="@FormModel" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudPaper Class="pa-4">
                <MudTextField Label="FirstName" For="@(() => FormModel.ManagerPersonalInfo.FirstName)" @bind-Value="FormModel.ManagerPersonalInfo.FirstName" />
                <MudTextField Label="LastName" For="@(() => FormModel.ManagerPersonalInfo.LastName)" @bind-Value="FormModel.ManagerPersonalInfo.LastName" />
                <MudTextField Label="Email" For="@(() => FormModel.ManagerPersonalInfo.Email)" @bind-Value="FormModel.ManagerPersonalInfo.Email" />
                <MudDatePicker Label="Date of birth" For="@(() => FormModel.ManagerPersonalInfo.DateOfBirth)" @bind-Date="FormModel.ManagerPersonalInfo.DateOfBirth" />
                <SelectCountryComponent @bind-Country="FormModel.ManagerPersonalInfo.Country" />
                <SelectCityComponent @bind-City="FormModel.ManagerPersonalInfo.City" />
                <MudTextField Label="Street" For="@(() => FormModel.ManagerPersonalInfo.Street)" @bind-Value="FormModel.ManagerPersonalInfo.Street" />
                <MudTextField Label="House number" For="@(() => FormModel.ManagerPersonalInfo.HouseNumber)" @bind-Value="FormModel.ManagerPersonalInfo.HouseNumber" />
                <MudTextField Label="Postal code" For="@(() => FormModel.ManagerPersonalInfo.Code)" @bind-Value="FormModel.ManagerPersonalInfo.Code" />
            </MudPaper>
            <MudPaper Class="pa-4 mt-4">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled">Create</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation summary</MudText>
                <MudText Color="@Color.Error">
                    <ValidationSummary />
                </MudText>
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    public CreateManagerForm FormModel { get; set; } = new();
    [Parameter] public EventCallback<EditContext> OnSubmit { get; set; }

    async Task HandleSubmit(EditContext context)
    {
        await OnSubmit.InvokeAsync(context);
        ClearForm();
    }

    void ClearForm()
    {
        FormModel = new();
    }

    public class ManagerPersonalInfoFormModel
    {
        [Required, MinLength(2), MaxLength(100)] public string? FirstName { get; set; }

        [Required, MinLength(2), MaxLength(100)] public string? LastName { get; set; }

        [Required, EmailAddress] public string? Email { get; set; }

        [Required] public DateTime? DateOfBirth { get; set; }

        [Required] public string? Country { get; set; }

        [Required] public string? City { get; set; }

        [Required] public string? Street { get; set; }

        [Required] public string? HouseNumber { get; set; }

        [Required] public string? Code { get; set; }
    }

    public class CreateManagerForm
    {
        public ManagerPersonalInfoFormModel ManagerPersonalInfo { get; set; } = new();
    }
}
